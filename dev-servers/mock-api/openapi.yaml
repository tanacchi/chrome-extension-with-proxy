openapi: 3.0.3
info:
  title: Mock API Server
  description: OpenAI互換のモックAPIサーバー
  version: 1.0.0
  contact:
    name: Chrome Extension Development Team
servers:
  - url: http://localhost:3001
    description: ローカル開発環境
  - url: http://localhost:3002
    description: ローカル開発環境（代替ポート）

paths:
  /v1/chat/completions:
    post:
      summary: Chat Completions API
      description: OpenAI Chat Completions APIのモック実装
      operationId: createChatCompletion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCompletionRequest'
            examples:
              basic_request:
                summary: 基本的なリクエスト例
                value:
                  model: "gpt-4o-mini"
                  messages:
                    - role: "system"
                      content: "あなたはテーブルデータの分析を行うAIアシスタントです。"
                    - role: "user"
                      content: "以下のテーブルデータを分析してください: りんご, バナナ, オレンジ"
              custom_prompt:
                summary: カスタムプロンプトのリクエスト例
                value:
                  model: "gpt-4o"
                  messages:
                    - role: "system"
                      content: "データの特徴を詳しく分析してください。"
                    - role: "user"
                      content: "商品名: りんご, 価格: 100円, 在庫: 50個"
      responses:
        '200':
          description: 成功レスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatCompletionResponse'
              examples:
                success_response:
                  summary: 成功レスポンス例
                  value:
                    id: "chatcmpl-abc123"
                    object: "chat.completion"
                    created: 1678901234
                    model: "gpt-4o-mini"
                    choices:
                      - index: 0
                        message:
                          role: "assistant"
                          content: "「以下のテーブルデータを分析してください: りんご, バナナ, オレンジ」のデータを分析すると、これらは果物の名前のようです。色とりどりで栄養価の高い食材として注目されます。"
                        finish_reason: "stop"
                    usage:
                      prompt_tokens: 45
                      completion_tokens: 62
                      total_tokens: 107
        '400':
          description: リクエストエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_request:
                  summary: 無効なリクエスト例
                  value:
                    error:
                      message: "Invalid request: model and messages are required"
                      type: "invalid_request_error"
                      code: "invalid_request"

  /health:
    get:
      summary: ヘルスチェック
      description: サーバーの稼働状況を確認
      operationId: healthCheck
      responses:
        '200':
          description: サーバーが正常に稼働中
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
              examples:
                healthy:
                  summary: 正常なレスポンス例
                  value:
                    status: "ok"
                    timestamp: "2024-01-15T10:30:00.000Z"

components:
  schemas:
    ChatCompletionRequest:
      type: object
      required:
        - model
        - messages
      properties:
        model:
          type: string
          description: 使用するモデル名
          enum:
            - "gpt-4o"
            - "gpt-4o-mini"
            - "gpt-3.5-turbo"
          example: "gpt-4o-mini"
        messages:
          type: array
          description: 会話メッセージの配列
          minItems: 1
          items:
            $ref: '#/components/schemas/ChatMessage'
        temperature:
          type: number
          description: ランダム性制御（0.0-2.0）
          minimum: 0.0
          maximum: 2.0
          default: 1.0
        max_tokens:
          type: integer
          description: 最大生成トークン数
          minimum: 1
          maximum: 4096
          default: 1000

    ChatMessage:
      type: object
      required:
        - role
        - content
      properties:
        role:
          type: string
          description: メッセージの役割
          enum:
            - "system"
            - "user"
            - "assistant"
        content:
          type: string
          description: メッセージ内容
          minLength: 1
          maxLength: 10000

    ChatCompletionResponse:
      type: object
      required:
        - id
        - object
        - created
        - model
        - choices
        - usage
      properties:
        id:
          type: string
          description: 一意のID
          pattern: "^chatcmpl-[a-zA-Z0-9]+$"
          example: "chatcmpl-abc123def456"
        object:
          type: string
          description: オブジェクトタイプ
          enum: ["chat.completion"]
        created:
          type: integer
          description: 作成日時（Unix timestamp）
          example: 1678901234
        model:
          type: string
          description: 使用されたモデル名
          example: "gpt-4o-mini"
        choices:
          type: array
          description: 生成された選択肢
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/ChatChoice'
        usage:
          $ref: '#/components/schemas/Usage'

    ChatChoice:
      type: object
      required:
        - index
        - message
        - finish_reason
      properties:
        index:
          type: integer
          description: 選択肢のインデックス
          minimum: 0
          example: 0
        message:
          $ref: '#/components/schemas/ChatMessage'
        finish_reason:
          type: string
          description: 完了理由
          enum:
            - "stop"
            - "length"
            - "content_filter"

    Usage:
      type: object
      required:
        - prompt_tokens
        - completion_tokens
        - total_tokens
      properties:
        prompt_tokens:
          type: integer
          description: プロンプトのトークン数
          minimum: 0
          example: 45
        completion_tokens:
          type: integer
          description: 生成されたテキストのトークン数
          minimum: 0
          example: 62
        total_tokens:
          type: integer
          description: 総トークン数
          minimum: 0
          example: 107

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - message
            - type
            - code
          properties:
            message:
              type: string
              description: エラーメッセージ
              example: "Invalid request: model and messages are required"
            type:
              type: string
              description: エラータイプ
              example: "invalid_request_error"
            code:
              type: string
              description: エラーコード
              example: "invalid_request"

    HealthResponse:
      type: object
      required:
        - status
        - timestamp
      properties:
        status:
          type: string
          description: サーバーステータス
          enum: ["ok", "error"]
          example: "ok"
        timestamp:
          type: string
          description: チェック実行時刻（ISO 8601形式）
          format: date-time
          example: "2024-01-15T10:30:00.000Z"

tags:
  - name: Chat
    description: チャット補完API
  - name: Health
    description: ヘルスチェック